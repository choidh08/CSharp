<UserControl x:Class="coinBlock.Views.Login"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" 
             xmlns:ViewModels="clr-namespace:coinBlock.ViewModels"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:localization="clr-namespace:coinBlock.Localization"
             mc:Ignorable="d"
             DataContext="{dxmvvm:ViewModelSource Type=ViewModels:LoginViewModel}"
             d:DesignHeight="768" d:DesignWidth="1280" Visibility="{Binding IsLoginView}">
    <UserControl.Resources>
        <dxmvvm:BooleanNegationConverter x:Key="BooleanNegationConverter"/>     
    </UserControl.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dx:DXMessageBoxService />
        <dxmvvm:ValidationErrorsHostBehavior x:Name="validationErrorsHostBehavior"/>
    </dxmvvm:Interaction.Behaviors>    
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="../Images/hts_intro_login.jpg"/>
        </Grid.Background>
        <dx:LoadingDecorator IsSplashScreenShown="{Binding IsBusy}" OwnerLock="InputOnly" dx:ThemeManager.ThemeName="MetropolisLight" x:Name="decorator">
            <dx:LoadingDecorator.SplashScreenTemplate>
                <DataTemplate>
                    <dx:WaitIndicator DeferedVisibility="True" Content="Login Encryption Processing.."/>
                </DataTemplate>
            </dx:LoadingDecorator.SplashScreenTemplate>
            <Border Background="#FFF" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,105,0,0" CornerRadius="10">
                <StackPanel Width="380" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <TextBlock Text="{Binding Email}" Margin="30,50,0,0" FontSize="13" Foreground="Black"/>
                    <Border Background="#FFF" BorderBrush="#FFF">
                        <Border Background="#FFF" CornerRadius="3" Height="50" Margin="28,0,28,30" BorderBrush="#d0d0d0" BorderThickness="0,0,0,0.5">
                            <dxe:TextEdit EditValue="{Binding UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" FontSize="16" MaxLength="50">
                                <dxe:TextEdit.BorderTemplate>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <Border BorderBrush="#FFF">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </dxe:TextEdit.BorderTemplate>
                                <dxe:TextEdit.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding LoginCommand}" />
                                </dxe:TextEdit.InputBindings>
                            </dxe:TextEdit>
                        </Border>
                    </Border>

                    <TextBlock Text="{Binding PassWord}" Margin="30,0,0,0" FontSize="13" Foreground="Black"/>
                    <Border Background="#FFF">
                        <Border Background="#FFF" CornerRadius="3" Height="50" Margin="28,0,28,0" BorderBrush="#d0d0d0" BorderThickness="0,0,0,0.5">
                            <dxe:PasswordBoxEdit EditValue="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" FontSize="16" MaxLength="30">
                                <dxe:PasswordBoxEdit.BorderTemplate>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <Border BorderBrush="#FFF">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </dxe:PasswordBoxEdit.BorderTemplate>
                                <dxe:PasswordBoxEdit.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding LoginCommand}" />
                                </dxe:PasswordBoxEdit.InputBindings>
                            </dxe:PasswordBoxEdit>
                        </Border>
                    </Border>
                    <Border Background="#FFF" BorderBrush="#FFF">
                        <Grid Margin="30,12,30,40">
                            <dxe:CheckEdit Content="{Binding SaveID}" HorizontalAlignment="Left" FontSize="12" Foreground="#141414" VerticalAlignment="Center" IsChecked="{Binding IsCheck}" FontFamily="/Ecoinex;component/Resources/#NanumSquareRound Regular" />
                            <dxe:ComboBoxEdit Width="150"  Height="40" ItemsSource="{Binding LangeList}" SelectedItem="{Binding SelectedLang}"  VerticalAlignment="Center" DisplayMember="Ln" ValueMember="Lv" IsTextEditable="False"  HorizontalAlignment="Right"/>
                        </Grid>
                    </Border>
                    <Border Background="Transparent" CornerRadius="0,0,20,20">
                        <Button Height="60" Margin="0,0,0,0" Content="{Binding LoginTitle}"  Command="{Binding LoginCommand}" IsEnabled="{Binding ElementName=validationErrorsHostBehavior, Path=HasErrors, Converter={dxmvvm:BooleanNegationConverter}}" dx:ThemeManager.ThemeName="None">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="#0197ee"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="FontSize" Value="20"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" CornerRadius="0,0,10,10">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" Value="DarkGray"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Border>
                </StackPanel>
            </Border>
        </dx:LoadingDecorator>
    </Grid>
</UserControl>